{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport CartItem from \"../Components/CartItem\";\nimport { useSelector } from 'react-redux';\nimport { usePostCartMutation } from \"../Services/shopServices\";\nimport Home from \"./Home\";\nimport OrderScreen from \"./OrderScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Cart = function Cart() {\n  var _useSelector = useSelector(function (state) {\n      return state.cartReducer.value;\n    }),\n    CartData = _useSelector.items,\n    total = _useSelector.total,\n    updatedAt = _useSelector.updatedAt,\n    user = _useSelector.user;\n  var _usePostCartMutation = usePostCartMutation(),\n    _usePostCartMutation2 = _slicedToArray(_usePostCartMutation, 2),\n    triggerPostCart = _usePostCartMutation2[0],\n    result = _usePostCartMutation2[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    order = _useState2[0],\n    setOrder = _useState2[1];\n  var onConfirm = function onConfirm() {\n    triggerPostCart({\n      items: CartData,\n      total: total,\n      user: user,\n      updatedAt: updatedAt\n    });\n    alert(\"ORDEN CONFIRMADA- GRACIAS POR COMPRAR\");\n    setOrder(true);\n  };\n  console.log(result);\n  return _jsx(_Fragment, {\n    children: order ? _jsx(View, {\n      children: _jsx(OrderScreen, {\n        name: \"Orders\"\n      })\n    }) : _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(FlatList, {\n        data: CartData,\n        keyExtractor: function keyExtractor(cartItem) {\n          return cartItem.id;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(CartItem, {\n            cartItem: item\n          });\n        }\n      }), _jsxs(View, {\n        style: styles.totalContainer,\n        children: [_jsx(Pressable, {\n          onPress: onConfirm,\n          children: _jsx(Text, {\n            children: \"Confirm\"\n          })\n        }), _jsxs(Text, {\n          children: [\"Total: $\", total]\n        })]\n      })]\n    })\n  });\n};\nexport default Cart;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n    flex: 1\n  },\n  totalContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    paddingBottom: 20\n  }\n});","map":{"version":3,"names":["React","useState","CartItem","useSelector","usePostCartMutation","Home","OrderScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Cart","_useSelector","state","cartReducer","value","CartData","items","total","updatedAt","user","_usePostCartMutation","_usePostCartMutation2","_slicedToArray","triggerPostCart","result","_useState","_useState2","order","setOrder","onConfirm","alert","console","log","children","View","name","style","styles","container","FlatList","data","keyExtractor","cartItem","id","renderItem","_ref","item","totalContainer","Pressable","onPress","Text","StyleSheet","create","justifyContent","flex","flexDirection","alignItems","paddingBottom"],"sources":["C:/Users/Usuario/Desktop/Curso Apps/proyectoFinalApp/ProyectoFinalAppReactNativeFcurrao/src/Screens/Cart.jsx"],"sourcesContent":["import { FlatList, Pressable, StyleSheet, Text, View } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport CartItem from '../Components/CartItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { usePostCartMutation } from '../Services/shopServices';\r\nimport Home from './Home';\r\nimport OrderScreen from './OrderScreen';\r\n\r\nconst Cart = () => {\r\n    const {items: CartData, total, updatedAt, user} = useSelector(state => state.cartReducer.value)\r\n    const [triggerPostCart, result] = usePostCartMutation()\r\n    const [order, setOrder] = useState(false)\r\n\r\n    const onConfirm = () => {\r\n        triggerPostCart({items: CartData, total, user, updatedAt})\r\n        alert(\"ORDEN CONFIRMADA- GRACIAS POR COMPRAR\")\r\n        setOrder(true)\r\n    }\r\n\r\n    console.log(result);\r\n\r\n    return (\r\n        <>\r\n        { order ? (  <View> \r\n            <OrderScreen    name=\"Orders\"></OrderScreen>\r\n             </View>     \r\n             ) \r\n             : \r\n              ( \r\n    <View style={styles.container}>\r\n        <FlatList\r\n            data={CartData}\r\n            keyExtractor={cartItem => cartItem.id}\r\n            renderItem={({item})=> {\r\n                return (\r\n                    <CartItem\r\n                        cartItem={item}\r\n                    />\r\n                )\r\n            }}\r\n        />\r\n        <View style={styles.totalContainer}>\r\n            <Pressable\r\n                onPress = {onConfirm}\r\n            >\r\n                <Text>\r\n                    Confirm\r\n                </Text>\r\n            </Pressable>\r\n            <Text>Total: ${total}</Text>\r\n        </View>\r\n    </View>\r\n     )  }\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'space-between',\r\n        flex: 1,\r\n    },\r\n    totalContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        paddingBottom: 20,\r\n    }\r\n})\r\n\r\n\r\n// import { Pressable, StyleSheet, Text, View } from 'react-native'\r\n// import React from 'react'\r\n// // import CartData from '../Data/cart.json'\r\n// import CartItem from '../Components/CartItem'\r\n// import { FlatList } from 'react-native-web'\r\n// import { useSelector } from 'react-redux'\r\n// import { usePostCartMutation } from '../Services/shopServices'\r\n\r\n\r\n// const Cart = () => { \r\n//     const {items: CartData, total, updatedAt, user} = useSelector(state => state.cartReducer.value)\r\n//     const [triggerPostCart, result] = usePostCartMutation()\r\n\r\n      \r\n//     const confirmCart = () => {\r\n//         // chekeo de stock\r\n//         triggerPostCart({CartData, total ,user, updatedAt})\r\n//     }\r\n//     // const total = CartData.reduce((acc, item) => \r\n//     // acc += item.price * item.quantity, 0)\r\n\r\n\r\n//     console.log(\"result\",result);\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n\r\n//     <FlatList\r\n//     data={CartData}\r\n//     keyExtractor={cartItem => cartItem.id}\r\n//     renderItem={ ({item})=>{\r\n//         return(\r\n//             <CartItem cartItem={item}/>\r\n//         )\r\n//     } }\r\n//     />    \r\n\r\n//     <View style={styles.totalContainer}>\r\n//     <Pressable\r\n//     onPress={confirmCart} >\r\n//         <Text  style={styles.confirm}>\r\n//           Confirm\r\n//         </Text>\r\n//     </Pressable>\r\n//         <Text style={styles.total}>\r\n//             Total : {total}\r\n//         </Text>\r\n\r\n//     </View>\r\n//     </View>\r\n//   )\r\n// }\r\n\r\n// export default Cart\r\n\r\n// const styles = StyleSheet.create({\r\n//     confirm:{ \r\n//             backgroundColor:\"blue\",\r\n//             padding: \"15px\",\r\n//             flexDirection: 'row',\r\n//             marginBottom: 100,\r\n//                 justifyContent:'center',\r\n//                 alignItems: 'center',\r\n//     },\r\n//         totalContainer:{\r\n//             flexDirection: 'row',\r\n//             marginBottom: 20,\r\n//             justifyContent:'center',\r\n//             alignItems: 'center',\r\n//         }, \r\n//         container: {\r\n//             justifyContent: 'space-between',\r\n//             flex: 1,\r\n//         },\r\n//         total: {\r\n//             marginTop: \"-100px\",\r\n//         padding: \"15px\",\r\n//         fontSize: 24,\r\n//     }\r\n// })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}