{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { colors } from \"../Global/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { decrement, increment, incrementByAmount, reset } from \"../features/Counter/counterSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Counter = function Counter() {\n  var _useState = useState(\"0\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputToAdd = _useState2[0],\n    setInputToAdd = _useState2[1];\n  var dispatch = useDispatch();\n  var count = useSelector(function (state) {\n    return state.counterReducer.value;\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return dispatch(decrement());\n        },\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"-\"\n        })\n      }), _jsx(Text, {\n        style: styles.span,\n        children: count\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return dispatch(increment());\n        },\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"+\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Cantidad a aumentar\",\n        style: styles.spanInput,\n        onChangeText: setInputToAdd,\n        value: inputToAdd\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return dispatch(incrementByAmount(+inputToAdd));\n        },\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Add\"\n        })\n      })]\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        return dispatch(reset());\n      },\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Reset\"\n      })\n    })]\n  });\n};\nexport default Counter;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: colors.pink,\n    padding: 10\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  button: {\n    padding: 10,\n    backgroundColor: colors.lightPink\n  },\n  span: {\n    backgroundColor: colors.red,\n    width: \"60%\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  spanInput: {\n    backgroundColor: colors.peach,\n    width: \"60%\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: 16\n  },\n  buttonText: {\n    fontSize: 18,\n    fontFamily: \"Josefin\"\n  }\n});","map":{"version":3,"names":["React","useState","colors","useDispatch","useSelector","decrement","increment","incrementByAmount","reset","jsx","_jsx","jsxs","_jsxs","Counter","_useState","_useState2","_slicedToArray","inputToAdd","setInputToAdd","dispatch","count","state","counterReducer","value","View","style","styles","container","children","buttonsContainer","Pressable","onPress","button","Text","buttonText","span","TextInput","placeholder","spanInput","onChangeText","StyleSheet","create","flexDirection","justifyContent","alignItems","width","backgroundColor","pink","padding","marginBottom","lightPink","red","textAlign","fontSize","peach","fontFamily"],"sources":["C:/Users/federico.currao/Documents/OtrosFC/App/ProyectoFinalAppReactNativeFcurrao/src/Components/Counter.jsx"],"sourcesContent":["import { Pressable, StyleSheet, Text, TextInput, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { decrement, increment, incrementByAmount, reset } from \"../features/Counter/counterSlice\";\r\n\r\nconst Counter = () => {\r\n    const [inputToAdd, setInputToAdd] = useState(\"0\");\r\n    // const [inputToAdd, setInputToAdd] = useState(0);\r\n\r\n    const dispatch = useDispatch()\r\n    const count = useSelector(state => state.counterReducer.value)\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        <View style={styles.buttonsContainer}>\r\n            <Pressable \r\n            onPress={ () => dispatch(decrement())}\r\n            style={styles.button}\r\n            >\r\n                <Text style={styles.buttonText}>-</Text>\r\n            </Pressable>\r\n            <Text style={styles.span}>{count}</Text>\r\n            <Pressable \r\n            onPress={ () => dispatch(increment())}\r\n             style={styles.button}\r\n             >\r\n                <Text style={styles.buttonText}>+</Text>\r\n            </Pressable>\r\n        </View>\r\n        <View style={styles.buttonsContainer}>\r\n            <TextInput\r\n                placeholder=\"Cantidad a aumentar\"\r\n                style={styles.spanInput}\r\n                onChangeText={setInputToAdd}\r\n                value={inputToAdd}\r\n            />\r\n            <Pressable\r\n            onPress={ () => dispatch(incrementByAmount(+inputToAdd))}\r\n            style={styles.button}\r\n            >\r\n                <Text style={styles.buttonText}>Add</Text>\r\n            </Pressable>\r\n        </View>\r\n        <Pressable \r\n        onPress={ () => dispatch(reset())}\r\n        style={styles.button}\r\n        >\r\n            <Text style={styles.buttonText}>Reset</Text>\r\n        </Pressable>\r\n    </View>\r\n    );\r\n};\r\n\r\nexport default Counter;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        backgroundColor: colors.pink,\r\n        padding: 10,\r\n    },\r\n    buttonsContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: 10,\r\n    },\r\n    button: {\r\n        padding: 10,\r\n        backgroundColor: colors.lightPink,\r\n    },\r\n    span: {\r\n        backgroundColor: colors.red,\r\n        width: \"60%\",\r\n        padding: 10,\r\n        textAlign: \"center\",\r\n        fontSize: 20,\r\n    },\r\n    spanInput: {\r\n        backgroundColor: colors.peach,\r\n        width: \"60%\",\r\n        padding: 10,\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n    },\r\n    buttonText: {\r\n        fontSize: 18,\r\n        fontFamily: \"Josefin\",\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}