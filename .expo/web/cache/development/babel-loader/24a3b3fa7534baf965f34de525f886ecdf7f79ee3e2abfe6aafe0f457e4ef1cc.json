{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { colors } from \"../Global/Colors\";\nimport { useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport OrderItem2 from \"./OrdenItem2\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar OrderItem = function OrderItem(_ref) {\n  var order = _ref.order;\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      children: order.map(function (eachOrder) {\n        return _jsxs(_Fragment, {\n          children: [console.warn(\"ea´pchOrder xd\", eachOrder), console.warn(\"eachOrder xd\", eachOrder.CartData), _jsx(FlatList, {\n            data: eachOrder.CartData,\n            renderItem: function renderItem(_ref2) {\n              var item = _ref2.item;\n              return _jsxs(_Fragment, {\n                children: [_jsxs(Text, {\n                  style: styles.text2,\n                  children: [\"  Fecha:\", eachOrder.updatedAt]\n                }), _jsx(OrderItem2, {\n                  title: item.title,\n                  price: item.price,\n                  quantity: item.quantity,\n                  subTotal: item.quantity * item.price\n                }), _jsxs(Text, {\n                  style: styles.text2,\n                  children: [\"  Fecha:\", eachOrder.total]\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            }\n          })]\n        });\n      })\n    })\n  });\n};\nexport default OrderItem;\nvar styles = StyleSheet.create({\n  card: {\n    height: \"min-content\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: colors.peach,\n    padding: 10,\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  card2: {\n    height: \"min-content\",\n    backgroundColor: \"white\",\n    padding: 10,\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  textContainer: {\n    width: \"70%\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\"\n  },\n  text: {\n    fontFamily: \"Josefin\",\n    fontSize: 17,\n    color: \"black\"\n  },\n  text1: {},\n  text2: {\n    fontFamily: \"Josefin\",\n    fontSize: 19,\n    color: \"gray\"\n  },\n  text3: {\n    fontSize: 20,\n    color: \"black\"\n  }\n});","map":{"version":3,"names":["Feather","colors","useSelector","React","useState","OrderItem2","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","OrderItem","_ref","order","children","View","map","eachOrder","console","warn","CartData","FlatList","data","renderItem","_ref2","item","Text","style","styles","text2","updatedAt","title","price","quantity","subTotal","total","keyExtractor","id","StyleSheet","create","card","height","display","flexDirection","backgroundColor","peach","padding","margin","borderWidth","borderRadius","justifyContent","alignItems","card2","textContainer","width","text","fontFamily","fontSize","color","text1","text3"],"sources":["C:/Users/federico.currao/Documents/OtrosFC/App/ProyectoFinalAppReactNativeFcurrao/src/Components/OrdenItem.jsx"],"sourcesContent":["import { StyleSheet, FlatList,Text, View } from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\"; \r\nimport { colors } from \"../Global/Colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport React, { useState } from \"react\";\r\nimport OrderItem2 from \"./OrdenItem2\";\r\n\r\n\r\n\r\nconst OrderItem = ({ order }) => {\r\n\r\n    // alert(\"TENGO Q TRAERME DE ORDERJ.JS LAS ORDENES Y REMPLAZARLA POR CART DATA\")  \r\n    // console.warn(\" xdxdx \",useSelector(state => state.orderReducer.value.updatedAt));\r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",order); \r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",totalorder); \r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",numberOrder); \r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",updatedAt); \r\n    // let  currentOrders = []\r\n    // // if ( useSelector(state => state.orderReducer.value.items.length !== 0) ){\r\n    // //  currentOrders = CartData[0].CartData\r\n\r\n    // // } else {currentOrders = []} \r\n    // // console.warn(\"34\",currentOrders);\r\n    // // const total = 10;\r\n    // // const total2 = currentOrders.reduce(\r\n    // //     (acc, currentItem) => (acc += currentItem.price * currentItem.quantity),\r\n    // //     0\r\n    // // );\r\n    // numberOrder = []\r\n    // let numRandon = Math.floor(Math.random() * 1000000)\r\n    // let aaaaaaaaaa = numberOrder.push(numRandon)\r\n    // console.warn(\"PPPPPPPPPPPPP\", aaaaaaaaaa);\r\n    // console.warn(\"PPPPPPPPPPPPP2    \", numberOrder);\r\n\r\n\r\n   \r\n\r\n    return (\r\n<> \r\n\r\n<View >  \r\n{order.map(eachOrder=> <> \r\n{console.warn(\"ea´pchOrder xd\", eachOrder)}\r\n{console.warn(\"eachOrder xd\", eachOrder.CartData)}\r\n<FlatList\r\n    data={eachOrder.CartData}\r\n    renderItem={({item}) => \r\n    <>\r\n    <Text style={styles.text2}>  Fecha:{eachOrder.updatedAt}</Text>\r\n    <OrderItem2 title={item.title} price={item.price} quantity={item.quantity} subTotal={item.quantity*item.price} />\r\n    <Text style={styles.text2}>  Fecha:{eachOrder.total}</Text>\r\n    \r\n    </>\r\n}\r\n    keyExtractor={item => item.id}\r\n  />\r\n  </>\r\n  )} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*     \r\n        {order.map(eachOrder=> <> \r\n<View  style={styles.card} onPress={() => {}}>\r\n            <Text style={styles.text2}>  Fecha:{eachOrder.updatedAt}</Text>\r\n\r\n            \r\n            {eachOrder.CartData.map(eO=>  \r\n                <>\r\n                 <View style={styles.card2} onPress={() => {}}>\r\n                  <Text style={styles.text1}> {eO.title} |  ${eO.price} - {eO.quantity}units = ${eO.price*eO.quantity} </Text> \r\n                \r\n                 </View>\r\n                </>\r\n                )}\r\n                {/* <Text style={styles.text2}> total de esta orden${total}</Text> */}\r\n                {/* <Text style={styles.text2}> total de esta orden${eachOrder.total}</Text>\r\n                <Text style={styles.text3}> ----------------------------------</Text>\r\n              </View>   \r\n                </>\r\n                )} */}  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </View>\r\n\r\n\r\n\r\n\r\n\r\n              </>  \r\n              );\r\n            };\r\n       \r\n\r\n\r\nexport default OrderItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        height: \"min-content\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: colors.peach,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 10, \r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",  \r\n    },\r\n    card2: {\r\n        height: \"min-content\",\r\n        backgroundColor: \"white\",\r\n        padding: 10,\r\n        margin: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    textContainer: {\r\n        width: \"70%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 17,\r\n        color: \"black\",\r\n    },\r\n    text1: { \r\n    },\r\n    text2: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 19,\r\n        color: \"gray\", \r\n    },\r\n    text3: { \r\n        fontSize: 20,\r\n        color: \"black\", \r\n    },\r\n});\r\n\r\n// import { StyleSheet, Text, View } from \"react-native\";\r\n// import { Feather } from \"@expo/vector-icons\";\r\n// import React from \"react\";\r\n// import { colors } from \"../Global/Colors\";\r\n\r\n// const OrderItem = ({ order }) => {\r\n//     const total = order.items.reduce(\r\n//         (acc, currentItem) => (acc += currentItem.price * currentItem.quantity),\r\n//         0\r\n//     );\r\n\r\n//     return (\r\n//         <View style={styles.card} onPress={() => {}}>\r\n//             <View style={styles.textContainer}>\r\n//                 <Text style={styles.text}>\r\n//                     {new Date(order.createdAt).toLocaleString()}\r\n//                 </Text>\r\n//                 <Text style={styles.text2}>${total}</Text>\r\n//             </View>\r\n//             <Feather name=\"search\" size={30} color=\"black\" />\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default OrderItem;\r\n\r\n// const styles = StyleSheet.create({\r\n//     card: {\r\n//         height: 100,\r\n//         backgroundColor: colors.peach,\r\n//         padding: 10,\r\n//         margin: 10,\r\n//         borderWidth: 2,\r\n//         borderRadius: 10,\r\n//         flexDirection: \"row\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//     },\r\n//     textContainer: {\r\n//         width: \"70%\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"flex-start\",\r\n//         alignItems: \"flex-start\",\r\n//     },\r\n//     text: {\r\n//         fontFamily: \"Josefin\",\r\n//         fontSize: 17,\r\n//         color: \"black\",\r\n//     },\r\n//     text2: {\r\n//         fontFamily: \"Josefin\",\r\n//         fontSize: 19,\r\n//         color: \"gray\",\r\n//     },\r\n// });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}