{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { colors } from \"../Global/Colors\";\nimport { useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport OrderItem2 from \"./OrdenItem2\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar OrderItem = function OrderItem(_ref) {\n  var order = _ref.order;\n  var numRandon = Math.floor(Math.random() * 1000000);\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      children: order.map(function (eachOrder) {\n        return _jsx(_Fragment, {\n          children: _jsxs(View, {\n            style: styles.card,\n            children: [_jsxs(Text, {\n              style: styles.text4,\n              children: [\"  Numero orden:\", numRandon]\n            }), _jsxs(Text, {\n              style: styles.text4,\n              children: [\"  Fecha:\", eachOrder.updatedAt]\n            }), _jsx(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsx(FlatList, {\n                data: eachOrder.CartData,\n                renderItem: function renderItem(_ref2) {\n                  var item = _ref2.item;\n                  return _jsx(_Fragment, {\n                    children: _jsx(OrderItem2, {\n                      id: item.id,\n                      title: item.title,\n                      price: item.price,\n                      quantity: item.quantity,\n                      subTotal: item.quantity * item.price\n                    })\n                  });\n                },\n                keyExtractor: function keyExtractor(item) {\n                  return item.id;\n                },\n                contentContainerStyle: {\n                  flexGrow: 1\n                }\n              })\n            }), _jsxs(Text, {\n              style: styles.text4,\n              children: [\"  Total orden:\", eachOrder.total]\n            })]\n          })\n        });\n      })\n    })\n  });\n};\nexport default OrderItem;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n    flex: 1\n  },\n  card: {\n    height: \"min-content\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: colors.peach,\n    padding: 10,\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  card2: {\n    height: \"min-content\",\n    backgroundColor: \"white\",\n    padding: 10,\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  textContainer: {\n    width: \"70%\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\"\n  },\n  text: {\n    fontFamily: \"Josefin\",\n    fontSize: 17,\n    color: \"black\"\n  },\n  text1: {\n    fontFamily: \"Josefin\",\n    fontSize: 22,\n    color: \"gray\"\n  },\n  text2: {\n    fontFamily: \"Josefin\",\n    fontSize: 19,\n    color: \"gray\"\n  },\n  text3: {\n    fontSize: 20,\n    color: \"black\"\n  },\n  text4: {\n    fontFamily: \"Josefin\",\n    fontSize: 22,\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["Feather","colors","useSelector","React","useState","OrderItem2","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","OrderItem","_ref","order","numRandon","Math","floor","random","children","View","map","eachOrder","style","styles","card","Text","text4","updatedAt","flex","FlatList","data","CartData","renderItem","_ref2","item","id","title","price","quantity","subTotal","keyExtractor","contentContainerStyle","flexGrow","total","StyleSheet","create","container","justifyContent","height","display","flexDirection","backgroundColor","peach","padding","margin","borderWidth","borderRadius","alignItems","card2","textContainer","width","text","fontFamily","fontSize","color","text1","text2","text3"],"sources":["C:/Users/federico.currao/Documents/OtrosFC/App/ProyectoFinalAppReactNativeFcurrao/src/Components/OrdenItem.jsx"],"sourcesContent":["import { StyleSheet, FlatList,Text, View } from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\"; \r\nimport { colors } from \"../Global/Colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport React, { useState } from \"react\";\r\nimport OrderItem2 from \"./OrdenItem2\";\r\n\r\n\r\n\r\nconst OrderItem = ({ order }) => {\r\n\r\n    // alert(\"TENGO Q TRAERME DE ORDERJ.JS LAS ORDENES Y REMPLAZARLA POR CART DATA\")  \r\n    // console.warn(\" xdxdx \",useSelector(state => state.orderReducer.value.updatedAt));\r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",order); \r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",totalorder); \r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",numberOrder); \r\n    // console.warn(\" xxxxxxxxxxxxxxxxx \",updatedAt); \r\n    // let  currentOrders = []\r\n    // // if ( useSelector(state => state.orderReducer.value.items.length !== 0) ){\r\n    // //  currentOrders = CartData[0].CartData\r\n\r\n    // // } else {currentOrders = []} \r\n    // // console.warn(\"34\",currentOrders);\r\n    // // const total = 10;\r\n    // // const total2 = currentOrders.reduce(\r\n    // //     (acc, currentItem) => (acc += currentItem.price * currentItem.quantity),\r\n    // //     0\r\n    // // );\r\n    // numberOrder = []\r\n    let numRandon = Math.floor(Math.random() * 1000000)\r\n    // let aaaaaaaaaa = numberOrder.push(numRandon)\r\n    // console.warn(\"PPPPPPPPPPPPP\", aaaaaaaaaa);\r\n    // console.warn(\"PPPPPPPPPPPPP2    \", numberOrder);\r\n\r\n\r\n   \r\n\r\n    return (\r\n<> \r\n\r\n<View >  \r\n{order.map(eachOrder=> <>  \r\n<View style={styles.card} > \r\n<Text style={styles.text4}>  Numero orden:{numRandon}</Text> \r\n<Text style={styles.text4}>  Fecha:{eachOrder.updatedAt}</Text>\r\n<View style={{flex:1}}>\r\n<FlatList\r\n// style={{flex: 1}}\r\n    data={eachOrder.CartData}\r\n    renderItem={({item}) => \r\n    <>\r\n    <OrderItem2 id={item.id} title={item.title} price={item.price} quantity={item.quantity} subTotal={item.quantity*item.price} />\r\n    </>\r\n\r\n\r\n\r\n\r\n\r\n}\r\n    keyExtractor={item => item.id}\r\n    contentContainerStyle={{\r\n        flexGrow: 1,\r\n        }}\r\n  />\r\n\r\n \r\n</View>\r\n\r\n \r\n\r\n\r\n\r\n\r\n   <Text style={styles.text4}>  Total orden:{eachOrder.total}</Text>\r\n   </View>\r\n  </>\r\n  )} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*     \r\n        {order.map(eachOrder=> <> \r\n<View  style={styles.card} onPress={() => {}}>\r\n            <Text style={styles.text2}>  Fecha:{eachOrder.updatedAt}</Text>\r\n\r\n            \r\n            {eachOrder.CartData.map(eO=>  \r\n                <>\r\n                 <View style={styles.card2} onPress={() => {}}>\r\n                  <Text style={styles.text1}> {eO.title} |  ${eO.price} - {eO.quantity}units = ${eO.price*eO.quantity} </Text> \r\n                \r\n                 </View>\r\n                </>\r\n                )}\r\n                {/* <Text style={styles.text2}> total de esta orden${total}</Text> */}\r\n                {/* <Text style={styles.text2}> total de esta orden${eachOrder.total}</Text>\r\n                <Text style={styles.text3}> ----------------------------------</Text>\r\n              </View>   \r\n                </>\r\n                )} */}  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </View>\r\n\r\n\r\n\r\n\r\n\r\n              </>  \r\n              );\r\n            };\r\n       \r\n\r\n\r\nexport default OrderItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'space-between',\r\n        flex: 1,\r\n    },\r\n    card: {\r\n        height: \"min-content\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: colors.peach,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 10, \r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",  \r\n    },\r\n    card2: {\r\n        height: \"min-content\",\r\n        backgroundColor: \"white\",\r\n        padding: 10,\r\n        margin: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    textContainer: {\r\n        width: \"70%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 17,\r\n        color: \"black\",\r\n    },\r\n    text1: { \r\n        fontFamily: \"Josefin\",\r\n        fontSize: 22,\r\n        color: \"gray\", \r\n    },\r\n    text2: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 19,\r\n        color: \"gray\", \r\n    },\r\n    text3: { \r\n        fontSize: 20,\r\n        color: \"black\", \r\n    },\r\n    text4: { \r\n        fontFamily: \"Josefin\",\r\n        fontSize: 22,\r\n        color: \"white\",  \r\n    },\r\n});\r\n\r\n// import { StyleSheet, Text, View } from \"react-native\";\r\n// import { Feather } from \"@expo/vector-icons\";\r\n// import React from \"react\";\r\n// import { colors } from \"../Global/Colors\";\r\n\r\n// const OrderItem = ({ order }) => {\r\n//     const total = order.items.reduce(\r\n//         (acc, currentItem) => (acc += currentItem.price * currentItem.quantity),\r\n//         0\r\n//     );\r\n\r\n//     return (\r\n//         <View style={styles.card} onPress={() => {}}>\r\n//             <View style={styles.textContainer}>\r\n//                 <Text style={styles.text}>\r\n//                     {new Date(order.createdAt).toLocaleString()}\r\n//                 </Text>\r\n//                 <Text style={styles.text2}>${total}</Text>\r\n//             </View>\r\n//             <Feather name=\"search\" size={30} color=\"black\" />\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default OrderItem;\r\n\r\n// const styles = StyleSheet.create({\r\n//     card: {\r\n//         height: 100,\r\n//         backgroundColor: colors.peach,\r\n//         padding: 10,\r\n//         margin: 10,\r\n//         borderWidth: 2,\r\n//         borderRadius: 10,\r\n//         flexDirection: \"row\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//     },\r\n//     textContainer: {\r\n//         width: \"70%\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"flex-start\",\r\n//         alignItems: \"flex-start\",\r\n//     },\r\n//     text: {\r\n//         fontFamily: \"Josefin\",\r\n//         fontSize: 17,\r\n//         color: \"black\",\r\n//     },\r\n//     text2: {\r\n//         fontFamily: \"Josefin\",\r\n//         fontSize: 19,\r\n//         color: \"gray\",\r\n//     },\r\n// });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}